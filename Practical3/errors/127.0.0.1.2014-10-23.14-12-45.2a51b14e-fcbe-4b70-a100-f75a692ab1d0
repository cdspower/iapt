(dp1
S'output'
p2
S"<type 'exceptions.NameError'> global name 'record' is not defined"
p3
sS'layer'
p4
S'/Users/cpower/Development/iapt/applications/Practical3/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n\n# @IAPT: This is a JOIN operation using contracted syntax of Web2Py.  See the Web2Py documentation for\n#more complex JOIN notation that you might need for your own applications.\ndef index():\n    #@IAPT: We return a dictionary that contains the results of the query - which is actually the two tables\n    #matched up in the appropriate join - so we will need to be careful on the return to the view to specify\n    #what tables we are looking for our data in.\n    return dict(features=db(db.products.id==db.features.product_id).select())\n\ndef search():\n    form=FORM(\'Search Products\',\n              INPUT(_name=\'search\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n        response.flash = \'Performing search for products containing the text: \'+request.vars.search+\'.\'\n    elif form.errors:\n        response.flash = \'Your form is empty.  Please enter a name of a product to search the store.\'\n    else:\n        response.flash = \'Please enter a name of a product to search the store.\'\n\n    if request.vars.search is not None:\n        term="%"+request.vars.search+"%"\n        results = db(db.products.name.like(term)).select()\n    else:\n        results = dict()\n    return dict(form=form, results=results)\n\ndef addproduct():\n    addform = FORM(DIV(LABEL(\'Product Name:\', _for=\'product_name\')),\n                   DIV(INPUT(_name=\'product_name\', requires=IS_NOT_EMPTY())),\n                   DIV(LABEL(\'Product Price:\', _for=\'product_price\')),\n                   DIV(INPUT(_name=\'product_price\',requires=IS_NOT_EMPTY())),\n                   DIV(LABEL(\'Product Type\', _for=\'product_type\')),\n                   DIV(SELECT(\'Book\',\'Blu-Ray\', value=\'b\',_name=\'product_type\')),\n                   DIV(LABEL(\'Product Description\', _for=\'product_description\')),\n                   DIV(TEXTAREA(_name=\'product_description\', requires=IS_NOT_EMPTY())),\n                   DIV(LABEL(\'Product Publisher\', _for=\'product_publisher\')),\n                   DIV(INPUT(_name=\'product_publisher\', requires=IS_NOT_EMPTY())),\n                   DIV(INPUT(_type=\'submit\')))\n\n    if addform.accepts(request,session):\n        db.products.insert(name=request.vars.product_name,price=request.vars.product_price, type=request.vars.product_type,\n                           description=request.vars.product_description,publisher=request.vars.product_publisher)\n        db.commit\n        response.flash = \'New product added to database.\'\n    elif addform.errors:\n        response.flash = \'One or more of your form fields has an error. Please see below for more information\'\n    else:\n        response.flash = \'Please complete the form below to add a new product.\'\n    return dict(addform=addform)\n\ndef addproduct():\n    addform = FORM(DIV(LABEL(\'Product Name:\', _for=\'product_name\')),\n                   DIV(INPUT(_name=\'product_name\', requires=IS_NOT_EMPTY())),\n                   DIV(LABEL(\'Product Price:\', _for=\'product_price\')),\n                   DIV(INPUT(_name=\'product_price\',requires=IS_NOT_EMPTY())),\n                   DIV(LABEL(\'Product Type\', _for=\'product_type\')),\n                   DIV(SELECT(\'Book\',\'Blu-Ray\', value=\'b\',_name=\'product_type\')),\n                   DIV(LABEL(\'Product Description\', _for=\'product_description\')),\n                   DIV(TEXTAREA(_name=\'product_description\', requires=IS_NOT_EMPTY())),\n                   DIV(LABEL(\'Product Publisher\', _for=\'product_publisher\')),\n                   DIV(INPUT(_name=\'product_publisher\', requires=IS_NOT_EMPTY())),\n                   DIV(INPUT(_type=\'submit\')))\n\n    if addform.accepts(request,session):\n        db.products.insert(name=request.vars.product_name,price=request.vars.product_price, type=request.vars.product_type,\n                           description=request.vars.product_description,publisher=request.vars.product_publisher)\n        db.commit\n        response.flash = \'New product added to database.\'\n    elif addform.errors:\n        response.flash = \'One or more of your form fields has an error. Please see below for more information\'\n    else:\n        response.flash = \'Please complete the form below to add a new product.\'\n    return dict(addform=addform)\n\ndef addproduct2():\n    db.products.description.widget = SQLFORM.widgets.text.widget\n\n    addform =SQLFORM(db.products, record)\n\n\n\n    if addform.accepts(request,session):\n        response.flash = \'New product added to database.\'\n    elif addform.errors:\n        response.flash = \'One or more of your form fields has an error. Please see below for more information\'\n    else:\n        response.flash = \'Please complete the form below to add a new product.\'\n    return dict(addform=addform)\nresponse._vars=response._caller(addproduct2)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/Users/cpower/Development/iapt/gluon/restricted.py", line 224, in restricted\n    exec ccode in environment\n  File "/Users/cpower/Development/iapt/applications/Practical3/controllers/default.py", line 91, in <module>\n  File "/Users/cpower/Development/iapt/gluon/globals.py", line 392, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/cpower/Development/iapt/applications/Practical3/controllers/default.py", line 80, in addproduct2\n    addform =SQLFORM(db.products, record)\nNameError: global name \'record\' is not defined\n'
p11
s.